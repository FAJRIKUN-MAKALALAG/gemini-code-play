#!/bin/bash
# ============================================================
#  SETUP JENKINS CI/CD + NGINX DEPLOY (VITE / REACT PROJECT)
# ============================================================

echo "🚀 Starting setup..."

# =====================
# 1. Update Sistem
# =====================
sudo apt-get update -y
sudo apt-get upgrade -y

# =====================
# 2. Setup Folder Deploy
# =====================
sudo mkdir -p /home/groupfox/public_html
sudo chmod -R 755 /home/groupfox/public_html
echo "<h1>It works 🚀</h1>" | sudo tee /home/groupfox/public_html/index.html

# =====================
# 3. Install Nginx
# =====================
sudo apt install nginx -y
sudo systemctl enable nginx
sudo systemctl start nginx

# Buat konfigurasi server block di port 8081
sudo bash -c 'cat > /etc/nginx/conf.d/aicode.conf <<EOF
server {
    listen 8081;
    server_name _;

    root /home/groupfox/public_html;
    index index.html;

    location / {
        try_files \$uri /index.html;
    }
}
EOF'

sudo nginx -t && sudo systemctl reload nginx

# Buka port firewall
sudo ufw allow 8081/tcp
sudo ufw reload

echo "✅ Nginx configured on port 8081"

# =====================
# 4. Install Java & Jenkins
# =====================
sudo apt install openjdk-17-jdk -y
curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null
sudo apt update -y
sudo apt install jenkins -y

sudo systemctl enable jenkins
sudo systemctl start jenkins
sudo systemctl status jenkins --no-pager

# Buka port Jenkins
sudo ufw allow 9090/tcp
sudo ufw reload

echo "✅ Jenkins installed & running on port 9090"

# =====================
# 5. Jenkins Webhook Setup (Manual Reminder)
# =====================
cat <<'INFO'
------------------------------------------------------------
📌 SELANJUTNYA (Manual step di GitHub):
1. Buka repo GitHub -> Settings -> Webhooks -> Add Webhook
2. Payload URL:
   http://103.217.144.99:9090/github-webhook/
3. Content type: application/json
4. Events: Just the push event
5. SSL Verification: Enabled
6. Klik Add Webhook
------------------------------------------------------------
INFO

# =====================
# 6. Reminder Setup Jenkins Credentials
# =====================
cat <<'CREDENTIALS'
------------------------------------------------------------
🧩 SETUP CREDENTIALS DI JENKINS:
Manage Jenkins → Credentials → (Global) → Add Credentials:

1. Kind: Secret text
   ID: VITE_SUPABASE_URL
   Value: https://<yourproject>.supabase.co

2. Kind: Secret text
   ID: VITE_SUPABASE_PUBLISHABLE_KEY
   Value: <your_supabase_anon_key>

3. Kind: Secret text
   ID: VITE_GEMINI_API_KEY
   Value: <your_gemini_api_key>

4. Kind: Secret text
   ID: VITE_GEMINI_MODEL
   Value: gemini-2.0-flash
------------------------------------------------------------
CREDENTIALS

# =====================
# 7. Sample Jenkinsfile
# =====================
sudo bash -c 'cat > /home/groupfox/Jenkinsfile_example <<EOF
pipeline {
  agent any
  options {
    timestamps()
    buildDiscarder(logRotator(numToKeepStr: "20"))
  }

  triggers {
    githubPush()
    pollSCM("H/5 * * * *")
  }

  environment {
    APP_DIR = "."
    DEPLOY_DIR = "/home/groupfox/public_html"
  }

  stages {
    stage("Checkout") {
      steps { checkout scm }
    }

    stage("Generate .env") {
      steps {
        withCredentials([
          string(credentialsId: "VITE_SUPABASE_URL",             variable: "SUPA_URL"),
          string(credentialsId: "VITE_SUPABASE_PUBLISHABLE_KEY", variable: "SUPA_KEY"),
          string(credentialsId: "VITE_GEMINI_API_KEY",           variable: "GEMINI_KEY"),
          string(credentialsId: "VITE_GEMINI_MODEL",             variable: "GEMINI_MODEL")
        ]) {
          sh '''
cat > .env <<EOF
VITE_SUPABASE_URL="\${SUPA_URL}"
VITE_SUPABASE_PUBLISHABLE_KEY="\${SUPA_KEY}"
VITE_GEMINI_API_KEY="\${GEMINI_KEY}"
VITE_GEMINI_MODEL="\${GEMINI_MODEL:-gemini-1.5-flash}"
EOF
'''
        }
      }
    }

    stage("Install Dependencies") {
      steps { sh "npm ci" }
    }

    stage("Build App") {
      steps { sh "npm run build" }
    }

    stage("Deploy") {
      steps { sh "rsync -av --delete \${APP_DIR}/dist/ \${DEPLOY_DIR}/" }
    }
  }

  post {
    success { echo "✅ DEPLOY OK — Cek http://103.217.144.99:8081" }
    failure { echo "❌ BUILD/DEPLOY GAGAL — Cek log di Jenkins" }
  }
}
EOF'

echo "✅ Jenkinsfile example created at /home/groupfox/Jenkinsfile_example"

# =====================
# 8. Next Steps (Manual)
# =====================
cat <<'NEXT'
------------------------------------------------------------
🎯 NEXT STEPS:
1. Masuk Jenkins → New Item → Pipeline
2. Pilih "Pipeline script from SCM"
3. Isi:
   - SCM: Git
   - Repository URL: https://github.com/<username>/<repo>.git
   - Branch: main
   - Script Path: Jenkinsfile
4. Klik Save dan Build Now.

💡 Setelah push ke GitHub, Jenkins otomatis build & deploy
   ke http://103.217.144.99:8081
------------------------------------------------------------
NEXT

echo "✅ Setup selesai!"
